---
  - hosts: all
    become: true
    gather_facts: yes
    tasks:
      - name: Set authorized key taken from file
        authorized_key:
          user: root
          state: present
          key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"     
      - name: Include ansible_distribution vars
        include_vars:
          file: "vars/main.yml"
      - name: Create sensu.repo
        tags: repo
        copy:
          src: "files/sensu.repo"
          dest: /etc/yum.repos.d/sensu.repo
     
      - name: Install packages
        tags: packages
        yum:
          name: 
            - epel-release
            - redis
            - sensu
            - uchiwa
            - jq
            - vim
          state: present
     
      - name: Modify redis bind 
        tags: redis
        lineinfile:
          path: "/etc/redis.conf"
          regexp: ‘^bind\ \d{1,}\.0\.0\.1$’
          state: absent
     
      - name: Start Redis
        tags: redis
        service:
          name: redis
          enabled: yes
          state: started
      - wait_for:
          port: 6379
     
      - name: Create config.json
        tags: configfiles
        copy:
          src: "files/config.json"
          dest: /etc/sensu/config.json
     
      - name: Create client.json
        tags: configfiles
        copy:
          src: "files/client.json"
          dest: /etc/sensu/conf.d/client.json
     
      - name: Create uchiwa.json
        tags: configfiles
        copy:
          src: "files/uchiwa.json"
          dest: /etc/sensu/uchiwa.json
      - file:
          path: /etc/sensu
          owner: sensu
          group: sensu
          recurse: yes

      - name: Start services
        tags: services
        service:
          name: "{{ item }}"
          state: started
          enabled: yes
        with_items:
            - sensu-server
            - sensu-api
            - sensu-client
            - uchiwa

      - name: Configure RabbitMQ GPG keys in the RPM keyring
        tags: rabbitmq
        rpm_key:
          key: "{{ sensu_rabbitmq_signing_key }}"
          state: present
        register: sensu_rabbitmq_import_key

      - name: Add RabbitMQ's repo
        tags: rabbitmq
        yum_repository:
          name: rabbitmq
          description: rabbitmq
          baseurl: "{{ sensu_rabbitmq_baseurl }}"
          gpgcheck: yes
          gpgkey: "{{ sensu_rabbitmq_signing_key }}"
          repo_gpgcheck: no

      - name: Add RabbitMQ's Erlang repo
        tags: rabbitmq
        yum_repository:
          name: rabbitmq-erlang
          description: rabbitmq-erlang
          baseurl: "{{ sensu_rabbitmq_erlang_baseurl }}"
          gpgcheck: yes
          gpgkey: "{{ sensu_rabbitmq_erlang_signing_key }}"
          repo_gpgcheck: no
      - name: Ensure socat is installed
        tags: rabbitmq
        yum:
          name: socat
          state: present

      - name: Ensure Erlang & RabbitMQ are installed
        tags: rabbitmq
        yum:
          name:
            - erlang
            - rabbitmq-server
          state: present
          enablerepo: rabbitmq,rabbitmq-erlang
          disablerepo: epel

      - name: Deploy RabbitMQ config
        tags: rabbitmq
        template:
          dest: "{{ sensu_rabbitmq_config_path }}/rabbitmq.config"
          src: "{{ sensu_rabbitmq_config_template }}"
          owner: root
          group: "{{ __root_group }}"
          mode: 0644
        notify: restart rabbitmq service

      - name: Ensure RabbitMQ is running
        tags: rabbitmq
        service:
          name: "{{ sensu_rabbitmq_service_name }}"
          state: started
          enabled: true
        register: sensu_rabbitmq_state

      - name: Wait for RabbitMQ to be up and running before asking to create a vhost
        tags: rabbitmq
        pause:
          seconds: 3
        when: sensu_rabbitmq_state is changed

      - name: Ensure Sensu RabbitMQ vhost exists
        rabbitmq_vhost:
          name: "{{ sensu_rabbitmq_vhost }}"
          state: present

      - name: Ensure Sensu RabbitMQ user has access to the Sensu vhost
        rabbitmq_user:
          user: "{{ sensu_rabbitmq_user_name }}"
          password: "{{ sensu_rabbitmq_password }}"
          vhost: "{{ sensu_rabbitmq_vhost }}"
          configure_priv: .*
          read_priv: .*
          write_priv: .*
          state: present
       
      - name: Deploy Sensu RabbitMQ configuration
        template:
          dest: "{{ sensu_config_path }}/conf.d/rabbitmq.json"
          owner: "{{ sensu_user_name }}"
          group: "{{ sensu_group_name }}"
          src: "{{ sensu_rabbitmq_config }}"
          mode: "0640"
      - name: enable necessary ports with firewalld
        firewalld:
          port: 3000/tcp
          permanent: yes
          state: enabled
    handlers:
      - include_tasks: handlers/main.yml
